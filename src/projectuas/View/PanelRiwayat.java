/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projectuas.View;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import projectuas.Controller.ControllerRiwayat;
import projectuas.Controller.ExportCSV;
import projectuas.Controller.ExportPDF;
import projectuas.Model.Riwayat;
import java.util.List;
import java.io.*;

/**
 *
 * @author AdityaHKP
 */
public class PanelRiwayat extends javax.swing.JPanel {

    /**
     * Creates new form PanelRiwayat
     */
    private final ControllerRiwayat controllerRiwayat;
        
    public PanelRiwayat() {
        initComponents();
        controllerRiwayat = new ControllerRiwayat();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        buttonSaveCsv = new javax.swing.JButton();
        buttonSavePdf = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        scrollPaneRiwayat = new javax.swing.JScrollPane();
        tabelRiwayat = new javax.swing.JTable();
        buttonHapus = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();

        setBackground(java.awt.SystemColor.control);

        jPanel1.setBackground(java.awt.SystemColor.control);

        buttonSaveCsv.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        buttonSaveCsv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconCsv.png"))); // NOI18N
        buttonSaveCsv.setText("CSV");
        buttonSaveCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveCsvActionPerformed(evt);
            }
        });

        buttonSavePdf.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        buttonSavePdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconPdf.png"))); // NOI18N
        buttonSavePdf.setText("PDF");
        buttonSavePdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSavePdfActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jLabel1.setText("Simpan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonSaveCsv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSavePdf))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonSaveCsv, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonSavePdf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabelRiwayat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Jumlah", "Keterangan", "Waktu"
            }
        ));
        scrollPaneRiwayat.setViewportView(tabelRiwayat);

        buttonHapus.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        buttonHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconTrash.png"))); // NOI18N
        buttonHapus.setText("Hapus Riwayat");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        buttonRefresh.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        buttonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconRefresh.png"))); // NOI18N
        buttonRefresh.setText("Refresh");
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneRiwayat)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRefresh)
                        .addGap(3, 3, 3)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneRiwayat, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus riwayat?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            controllerRiwayat.deleteRiwayat();
            refreshTable();
            JOptionPane.showMessageDialog(this, "Riwayat berhasil dihapus.");
        }
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        refreshTable();
        JOptionPane.showMessageDialog(this, "Berhasil memuat ulang riwayat.");
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void buttonSaveCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveCsvActionPerformed
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String exportPath = file.getAbsolutePath();
            if (!exportPath.toLowerCase().endsWith(".csv")) {
                exportPath += ".csv";
            }
            List<Riwayat> riwayatToWrite = controllerRiwayat.getAllRiwayat();
            try {
                ExportCSV exporter = new ExportCSV();
                exporter.exportCSVRiwayat(exportPath, riwayatToWrite);
                JOptionPane.showMessageDialog(this, "CSV berhasil disimpan di: " + exportPath);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan CSV: " + e.getMessage());
            }
        } else {
            System.out.println("Save command cancelled by user.");
        }
    }//GEN-LAST:event_buttonSaveCsvActionPerformed

    private void buttonSavePdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSavePdfActionPerformed
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String exportPath = file.getAbsolutePath();
            if (!exportPath.toLowerCase().endsWith(".pdf")) {
                exportPath += ".pdf";
            }
            List<Riwayat> riwayatToWrite = controllerRiwayat.getAllRiwayat();
            try {
                ExportPDF.exportPDFRiwayat(exportPath, riwayatToWrite);
                JOptionPane.showMessageDialog(this, "PDF berhasil disimpan di: " + exportPath);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan PDF: " + e.getMessage());
            }
        } else {
            System.out.println("Save command cancelled by user.");
        }
    }//GEN-LAST:event_buttonSavePdfActionPerformed

    private void refreshTable() {
        List<Riwayat> riwayatList = controllerRiwayat.getAllRiwayat();
        DefaultTableModel model = (DefaultTableModel) tabelRiwayat.getModel();
        model.setRowCount(0);
        for (Riwayat riwayat : riwayatList) {
            Object[] row = {
                riwayat.getNama(),
                riwayat.getJumlah(),
                riwayat.getKeterangan(),
                riwayat.getWaktu()
            };
            model.addRow(row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonSaveCsv;
    private javax.swing.JButton buttonSavePdf;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scrollPaneRiwayat;
    private javax.swing.JTable tabelRiwayat;
    // End of variables declaration//GEN-END:variables
}
